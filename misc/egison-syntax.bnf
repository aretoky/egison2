;; 途中までまとめようと思ったけど断念しています。
;; 空白の扱いが微妙です。


<sourcefile> ::= <empty> | (<whsp>* <toplevel> <whsp>* <newline>)* <whsp>* <toplevel> <whsp>*

<toplevel> ::= <testexp> | <defexp> | <ldexp> | <ldfexp> | <excexp>

<leftpar> ::= "(" 
<rightpar> ::= ")"

<testexp> ::= "(" "test" <egisonexp> ")"
<defexp> ::= "(" "define" <assignvar> <egisonexp> ")"
<ldexp> ::= "(" "load" <string> ")"
<ldfexp> ::= "(" "load-file" <string> ")"
<excexp> ::= "(" "execute" ")"

<whsp> ::= " " | "\t" | <newline> | <commentexp>
<newline> ::= "\n" | "\r" | "\r\n"
<commentexp> ::= ";" <character>* <newline> | "#|" <comment> "|#"
<comment> ::= <characterdonotcontainneither#|nor|#>* | "#|" <comment> "|#"

<assignvar> ::= "$" <identifier>
<identifier> ::= <fstname> <sndname>*
<fstname> ::= <alphabet> | <fstsymbol>
<fstsymbol> ::= "&" | "*" | "+" | "-" | "/" | ":" | "="
<sndname> ::= <fstname> | <digit> | <sndsymbol>
<sndsymbol> ::= "?" | "!"

<string> ::= "\"" <character>* "\""

<egisonexp> ::= <basedata> | <egisonfml> | <identifier>
<basedata> ::= <integer> | <float> | <bool> | <char> | <string>

<egisonfml> ::= <lambdaexp> | <matchexp> | <matchallexp> | <letexp> | <doexp> | <letrecexp> | <ifexp> | <loopexp> | <typeexp> | <macroexp> | <collectionexp> | <tupleexp> | <arrayexp> | <patternexp>

<matchexp> ::= "(" "match" <egisonexp> <egisonexp> <paircollection> <rightpar>
<paircollection> ::= "{" <pair>* "}"
<pair> ::= "[" <egisonexp> <egisonexp> "]"
<matchallexp> ::= "(" "match-all" <egisonexp> <egisonexp> <pair> ")"
<letexp> ::= "(" "let" <paircollection> <egisonexp> ")"
<doexp> ::= "(" "do" <paircollection> <egisonexp> ")"
<letrecexp> ::= "(" "letrec" <paircollection> <egisonexp> ")"
<ifexp> ::= "(" "if" <egisonexp> <egisonexp> <egisonexp> ")"
<loopexp> ::= "(" "loop" <assignvar> <assignvar> <egisonexp> <egisonexp> <egisonexp> ")"
<macroexp> ::= "(" "macro" <assignvartuple> <egisonexp> ")"
<typeexp> ::= "(" "type" <patdefcollection> ")"
<patdefcollection> ::= "{" <patdeftuple>* "}"
<patdeftuple> ::= "[" <patdef> <egisonexp> <paircollection> "]"
<patdef> ::= "_" | "," <assignvar> | <basepat>

<collectionexp> ::= "{" <contentsexp>* "}"
<contentsexp> ::= <egisonexp> | "@" <egisonexp>
<tupleexp> ::= "[" <egisonexp>* "]"
<arrayexp> ::= "[|" <arrayrow_0> "|]"
<arrayrow_n> ::= <egisonexp>* | ("[~" <arrayrow_(n+1)> "~]")*
<patternexp> ::= <basepat> | <valuepat> | <cutpat> | <andpat> | <orpat> | <notpat>
<basepat> ::= "<" <identifier> <patarg>* ">"
<patarg> ::= <egisonexp> | <assignvar>
<valuepat> ::= "," <egisonexp>
<cutpat> ::= "!" <egisonexp>
<andpat> ::= "(" "&" <egisonexp>* ")"
<orpat> ::= "(" "|" <egisonexp>* ")"
<notpat> ::= "^" <egisonexp>