(define $f (lambda [$x $y] (+ x y)))

(test (f 2 3))


(define $t [1 2])

(test (let {[[$x $y] t]} (+ x y)))


(test (letrec {[$f (lambda [$x] (+ g x))] [$g 10]} (f 1)))


(define $t (type {[$x 2] [$f (lambda [$x] (g x))] [$g (lambda [$y] (+ x y))]}))

(test (type-ref t x))

(test ((type-ref t f) 10))


(define $Something (type {[$var-match (lambda [$tgt] {tgt})]}))

(test (match-all 1 Something [$x x]))